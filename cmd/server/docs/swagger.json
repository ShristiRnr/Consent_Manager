{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/api/v1/auth/admin/login": {
            "post": {
                "description": "Authenticates an admin and returns a JWT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Admin login",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/admin/me": {
            "get": {
                "description": "Returns the current admin's JWT claims",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Get current admin info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/user/login": {
            "post": {
                "description": "Authenticates a user and returns a JWT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
    },
    "/api/v1/fiduciary/users/identify": {
      "post": {
        "description": "Identifies a Data Principal within the fiduciary's tenant using their email, phone, or external ID.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Fiduciary - User Management"],
        "summary": "Identify Data Principal",
        "security": [{ "FiduciaryBearerAuth": [] }],
        "parameters": [
          {
            "description": "Identifier for the user",
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/handlers.IdentifyRequest"
            },
            "examples": {
              "application/json": {
                "email": "jane.doe@example.com"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User identified successfully",
            "schema": {
              "$ref": "#/definitions/handlers.IdentifyResponse"
            },
            "examples": {
              "application/json": {
                "userId": "a1b2c3d4-e5f6-a7b8-c9d0-e1f2a3b4c5d6",
                "email": "jane.doe@example.com",
                "firstName": "Jane",
                "lastName": "Doe"
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "User not found" }
        }
      }
    },
    "/api/v1/public/consents/verify": {
      "post": {
        "description": "Verifies if a Data Principal has granted all required consents for a specific Consent Form. This is the core of the 'Consent SDK' functionality.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Public API"],
        "summary": "Verify Required Consents",
        "security": [{ "APIKeyAuth": [] }],
        "parameters": [
          {
            "description": "User and Consent Form identifiers",
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/handlers.VerifyConsentsRequest"
            },
            "examples": {
              "application/json": {
                "userId": "a1b2c3d4-e5f6-a7b8-c9d0-e1f2a3b4c5d6",
                "consentFormId": "f0e9d8c7-b6a5-f4e3-d2c1-b0a9f8e7d6c5"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Verification check complete. The 'status' field will be 'granted' or 'denied'.",
            "schema": {
              "$ref": "#/definitions/handlers.VerifyConsentsResponse"
            },
            "examples": {
              "application/json (Granted)": {
                "status": "granted",
                "userId": "a1b2c3d4-e5f6-a7b8-c9d0-e1f2a3b4c5d6",
                "consentFormId": "f0e9d8c7-b6a5-f4e3-d2c1-b0a9f8e7d6c5"
              },
              "application/json (Denied)": {
                "status": "denied",
                "userId": "a1b2c3d4-e5f6-a7b8-c9d0-e1f2a3b4c5d6",
                "consentFormId": "f0e9d8c7-b6a5-f4e3-d2c1-b0a9f8e7d6c5",
                "missingRequiredConsents": [
                  { "purposeId": "123e4567-e89b-12d3-a456-426614174000", "purposeName": "Product Analytics" }
                ]
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized (Invalid API Key)" }
        }
      }
        }
    },
    "definitions": {
        "handlers.IdentifyRequest": {
            "type": "object",
            "properties": {
                "email": { "type": "string", "description": "Email of the user to identify." },
                "phone": { "type": "string", "description": "Phone number of the user to identify." },
                "externalId": { "type": "string", "description": "External system ID of the user to identify." }
            }
        },
        "handlers.IdentifyResponse": {
            "type": "object",
            "properties": {
                "userId": { "type": "string" },
                "email": { "type": "string" },
                "firstName": { "type": "string" },
                "lastName": { "type": "string" }
            }
        },
        "handlers.VerifyConsentsRequest": {
            "type": "object",
            "properties": {
                "userId": { "type": "string" },
                "consentFormId": { "type": "string" }
            }
        },
        "handlers.VerifyConsentsResponse": {
            "type": "object",
            "properties": {
                "status": { "type": "string", "enum": ["granted", "denied"] },
                "userId": { "type": "string" },
                "consentFormId": { "type": "string" },
                "missingRequiredConsents": { "type": "array", "items": { "type": "object", "properties": { "purposeId": { "type": "string" }, "purposeName": { "type": "string" } } } }
            }
        },
        "handlers.DataPrincipalSignupRequest": {
          "type": "object",
          "properties": {
            "email": { "type": "string" },
            "password": { "type": "string" },
            "firstName": { "type": "string" },
            "lastName": { "type": "string" },
            "age": { "type": "integer" },
            "guardianEmail": { "type": "string" },
            "location": { "type": "string" },
            "phone": { "type": "string" }
          }
        },
        "models.UserConsent": {
          "type": "object",
          "properties": {
            "ID": { "type": "string" },
            "UserID": { "type": "string" },
            "PurposeID": { "type": "string" },
            "TenantID": { "type": "string" },
            "ConsentFormID": { "type": "string" },
            "Status": { "type": "boolean" },
            "ExpiresAt": { "type": "string", "format": "date-time" },
            "CreatedAt": { "type": "string", "format": "date-time" },
            "UpdatedAt": { "type": "string", "format": "date-time" }
          }
        },
        "dto.SubmitConsentRequest": {
          "type": "object",
          "properties": {
            "userId": { "type": "string" },
            "consentFormId": { "type": "string" },
            "consents": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": { "purposeId": { "type": "string" }, "granted": { "type": "boolean" } }
              }
            }
          }
        },
        "handlers.DSRRequest": {
          "type": "object",
          "properties": {
            "userId": { "type": "string" },
            "type": { "type": "string", "description": "e.g., 'Data Deletion', 'Data Portability'" },
            "note": { "type": "string" }
          }
        },
        "models.DSRRequest": {
          "type": "object",
          "properties": {
            "ID": { "type": "string" },
            "UserID": { "type": "string" },
            "TenantID": { "type": "string" },
            "Type": { "type": "string" },
            "Status": { "type": "string" },
            "RequestedAt": { "type": "string", "format": "date-time" }
          }
        },
        "handlers.CreateWebhookRequest": {
          "type": "object",
          "properties": {
            "url": { "type": "string" },
            "eventTypes": { "type": "array", "items": { "type": "string" } }
          }
        },
        "handlers.LoginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "handlers.LoginResponse": {
            "type": "object",
            "properties": {
                "expiresIn": {
                    "type": "integer"
                },
                "tenantId": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
      "FiduciaryBearerAuth": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      },
      "APIKeyAuth": { "type": "apiKey", "name": "X-API-Key", "in": "header" }
    }
}